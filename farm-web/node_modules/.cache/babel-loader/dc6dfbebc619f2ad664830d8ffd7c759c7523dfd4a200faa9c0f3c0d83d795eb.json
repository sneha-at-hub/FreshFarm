{"ast":null,"code":"/*!\n * Compressor.js v1.2.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2023-02-28T14:09:41.732Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, function () {\n  'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  var canvasToBlob = {\n    exports: {}\n  };\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n  (function (module) {\n    if (typeof window === 'undefined') {\n      return;\n    }\n    (function (window) {\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb;\n        // Parse the dataURI components as per RFC 2397\n        matches = dataURI.match(dataURIPattern);\n        if (!matches) {\n          throw new Error('invalid data URI');\n        }\n        // Default to text/plain;charset=US-ASCII\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        }\n        // Write the bytes of the string to an ArrayBuffer:\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        }\n        // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n  var toBlob = canvasToBlob.exports;\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n    /**\n     * Indicates if retain the image's Exif information after compressed.\n     * @type {boolean}\n    */\n    retainExif: false,\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n      height = _ref.height,\n      width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get Exif information from the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {Array} The read Exif information.\n   */\n  function getExif(arrayBuffer) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    var length = array.length;\n    var segments = [];\n    var start = 0;\n    while (start + 3 < length) {\n      var value = array[start];\n      var next = array[start + 1];\n\n      // SOS (Start of Scan)\n      if (value === 0xFF && next === 0xDA) {\n        break;\n      }\n\n      // SOI (Start of Image)\n      if (value === 0xFF && next === 0xD8) {\n        start += 2;\n      } else {\n        var offset = array[start + 2] * 256 + array[start + 3];\n        var end = start + offset + 2;\n        var segment = array.slice(start, end);\n        segments.push(segment);\n        start = end;\n      }\n    }\n    return segments.reduce(function (exifArray, current) {\n      if (current[0] === 0xFF && current[1] === 0xE1) {\n        return exifArray.concat(current);\n      }\n      return exifArray;\n    }, []);\n  }\n\n  /**\n   * Insert Exif information into the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {Array} exifArray - The Exif information to insert.\n   * @returns {ArrayBuffer} The transformed array buffer.\n   */\n  function insertExif(arrayBuffer, exifArray) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    if (array[2] !== 0xFF || array[3] !== 0xE0) {\n      return arrayBuffer;\n    }\n    var app0Length = array[4] * 256 + array[5];\n    var newArrayBuffer = [0xFF, 0xD8].concat(exifArray, array.slice(4 + app0Length));\n    return new Uint8Array(newArrayBuffer);\n  }\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n    FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n      this.file = file;\n      this.exif = [];\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n        var file = this.file,\n          options = this.options;\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n        var mimeType = file.type;\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n          options.retainExif = false;\n        }\n        var isJPEGImage = mimeType === 'image/jpeg';\n        var checkOrientation = isJPEGImage && options.checkOrientation;\n        var retainExif = isJPEGImage && options.retainExif;\n        if (URL && !checkOrientation && !retainExif) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          this.reader = reader;\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n            var orientation = 1;\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              orientation = resetAndGetOrientation(result);\n              if (orientation > 1) {\n                _extends(data, parseOrientation(orientation));\n              }\n            }\n            if (retainExif) {\n              _this.exif = getExif(result);\n            }\n            if (checkOrientation || retainExif) {\n              if (!URL\n\n              // Generate a new URL with the default orientation value 1.\n              || orientation > 1) {\n                data.url = arrayBufferToDataURL(result, mimeType);\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n            _this.load(data);\n          };\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n          if (checkOrientation || retainExif) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n        var file = this.file,\n          image = this.image;\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        };\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n        var naturalWidth = _ref2.naturalWidth,\n          naturalHeight = _ref2.naturalHeight,\n          _ref2$rotate = _ref2.rotate,\n          rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n          _ref2$scaleX = _ref2.scaleX,\n          scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n          _ref2$scaleY = _ref2.scaleY,\n          scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n          height = options.height;\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n        params.push(destX, destY, destWidth, destHeight);\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n        canvas.width = width;\n        canvas.height = height;\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n        var fillStyle = 'transparent';\n\n        // Converts PNG files over the `convertSize` to JPEGs.\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n        var isJPEGImage = options.mimeType === 'image/jpeg';\n        if (isJPEGImage) {\n          fillStyle = '#fff';\n        }\n\n        // Override the default fill color (#000, black)\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        var callback = function callback(blob) {\n          if (!_this3.aborted) {\n            var done = function done(result) {\n              return _this3.done({\n                naturalWidth: naturalWidth,\n                naturalHeight: naturalHeight,\n                result: result\n              });\n            };\n            if (blob && isJPEGImage && options.retainExif && _this3.exif && _this3.exif.length > 0) {\n              var next = function next(arrayBuffer) {\n                return done(toBlob(arrayBufferToDataURL(insertExif(arrayBuffer, _this3.exif), options.mimeType)));\n              };\n              if (blob.arrayBuffer) {\n                blob.arrayBuffer().then(next).catch(function () {\n                  _this3.fail(new Error('Failed to read the compressed image with Blob.arrayBuffer().'));\n                });\n              } else {\n                var reader = new FileReader();\n                _this3.reader = reader;\n                reader.onload = function (_ref7) {\n                  var target = _ref7.target;\n                  next(target.result);\n                };\n                reader.onabort = function () {\n                  _this3.fail(new Error('Aborted to read the compressed image with FileReader.'));\n                };\n                reader.onerror = function () {\n                  _this3.fail(new Error('Failed to read the compressed image with FileReader.'));\n                };\n                reader.onloadend = function () {\n                  _this3.reader = null;\n                };\n                reader.readAsArrayBuffer(blob);\n              }\n            } else {\n              done(blob);\n            }\n          }\n        };\n        if (canvas.toBlob) {\n          canvas.toBlob(callback, options.mimeType, options.quality);\n        } else {\n          callback(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref8) {\n        var naturalWidth = _ref8.naturalWidth,\n          naturalHeight = _ref8.naturalHeight,\n          result = _ref8.result;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        if (URL && image.src.indexOf('blob:') === 0) {\n          URL.revokeObjectURL(image.src);\n        }\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && !options.retainExif && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n        this.result = result;\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n    return Compressor;\n  }();\n  return Compressor;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","Compressor","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_toPropertyKey","_createClass","protoProps","staticProps","prototype","obj","value","_extends","assign","bind","hasOwnProperty","call","_toPrimitive","input","hint","prim","Symbol","toPrimitive","undefined","res","String","Number","arg","canvasToBlob","window","CanvasPrototype","HTMLCanvasElement","hasBlobConstructor","Blob","Boolean","e","hasArrayBufferViewSupport","Uint8Array","size","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","dataURIPattern","dataURLtoBlob","atob","ArrayBuffer","dataURI","matches","mediaType","isBase64","dataString","byteString","arrayBuffer","intArray","bb","match","Error","slice","decodeURIComponent","charCodeAt","type","append","getBlob","toBlob","mozGetAsFile","callback","quality","setTimeout","toDataURL","msToBlob","isBlob","toString","DEFAULTS","strict","checkOrientation","retainExif","maxWidth","Infinity","maxHeight","minWidth","minHeight","width","height","resize","mimeType","convertTypes","convertSize","beforeDraw","drew","success","error","IS_BROWSER","document","WINDOW","isPositiveNumber","Array","toArray","from","REGEXP_IMAGE_TYPE","isImageType","test","imageTypeToExtension","extension","substr","concat","fromCharCode","getStringFromCharCode","dataView","start","str","getUint8","btoa","arrayBufferToDataURL","chunks","chunkSize","uint8","subarray","join","resetAndGetOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","rotate","scaleX","scaleY","REGEXP_DECIMALS","normalizeDecimalNumber","times","Math","round","getAdjustedSizes","_ref","aspectRatio","isValidWidth","isValidHeight","adjustedWidth","getExif","array","segments","next","end","segment","reduce","exifArray","current","insertExif","app0Length","newArrayBuffer","ArrayBuffer$1","FileReader","URL","webkitURL","REGEXP_EXTENSION","AnotherCompressor","file","options","exif","image","Image","aborted","result","init","_this","fail","isJPEGImage","load","url","createObjectURL","reader","onload","data","onabort","onerror","onloadend","readAsArrayBuffer","readAsDataURL","_this2","draw","naturalWidth","naturalHeight","navigator","userAgent","crossOrigin","alt","name","src","_ref2","_this3","_ref2$rotate","_ref2$scaleX","_ref2$scaleY","canvas","createElement","context","getContext","is90DegreesRotated","abs","resizable","max","_ref3","_ref4","_ref5","_getAdjustedSizes","_getAdjustedSizes2","_getAdjustedSizes3","_getAdjustedSizes4","_getAdjustedSizes4$wi","_getAdjustedSizes4$he","floor","min","destX","destY","destWidth","destHeight","params","srcX","srcY","srcWidth","srcHeight","_getAdjustedSizes5","contain","cover","_ref6","fillStyle","indexOf","fillRect","save","translate","PI","scale","drawImage","restore","blob","done","then","catch","_ref7","_ref8","revokeObjectURL","date","Date","lastModified","getTime","lastModifiedDate","replace","err","abort","complete","noConflict","setDefaults"],"sources":["/Users/sneha/Downloads/FreshFarmApp (1) 2/FreshFarmApp/farm-web/node_modules/compressorjs/dist/compressor.js"],"sourcesContent":["/*!\n * Compressor.js v1.2.1\n * https://fengyuanchen.github.io/compressorjs\n *\n * Copyright 2018-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2023-02-28T14:09:41.732Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Compressor = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n      enumerableOnly && (symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      })), keys.push.apply(keys, symbols);\n    }\n    return keys;\n  }\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = null != arguments[i] ? arguments[i] : {};\n      i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n    return target;\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _extends() {\n    _extends = Object.assign ? Object.assign.bind() : function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n\n  var canvasToBlob = {exports: {}};\n\n  /*\n   * JavaScript Canvas to Blob\n   * https://github.com/blueimp/JavaScript-Canvas-to-Blob\n   *\n   * Copyright 2012, Sebastian Tschan\n   * https://blueimp.net\n   *\n   * Licensed under the MIT license:\n   * https://opensource.org/licenses/MIT\n   *\n   * Based on stackoverflow user Stoive's code snippet:\n   * http://stackoverflow.com/q/4998908\n   */\n  (function (module) {\n  if (typeof window === 'undefined') {\n    return;\n  }\n    (function (window) {\n\n      var CanvasPrototype = window.HTMLCanvasElement && window.HTMLCanvasElement.prototype;\n      var hasBlobConstructor = window.Blob && function () {\n        try {\n          return Boolean(new Blob());\n        } catch (e) {\n          return false;\n        }\n      }();\n      var hasArrayBufferViewSupport = hasBlobConstructor && window.Uint8Array && function () {\n        try {\n          return new Blob([new Uint8Array(100)]).size === 100;\n        } catch (e) {\n          return false;\n        }\n      }();\n      var BlobBuilder = window.BlobBuilder || window.WebKitBlobBuilder || window.MozBlobBuilder || window.MSBlobBuilder;\n      var dataURIPattern = /^data:((.*?)(;charset=.*?)?)(;base64)?,/;\n      var dataURLtoBlob = (hasBlobConstructor || BlobBuilder) && window.atob && window.ArrayBuffer && window.Uint8Array && function (dataURI) {\n        var matches, mediaType, isBase64, dataString, byteString, arrayBuffer, intArray, i, bb;\n        // Parse the dataURI components as per RFC 2397\n        matches = dataURI.match(dataURIPattern);\n        if (!matches) {\n          throw new Error('invalid data URI');\n        }\n        // Default to text/plain;charset=US-ASCII\n        mediaType = matches[2] ? matches[1] : 'text/plain' + (matches[3] || ';charset=US-ASCII');\n        isBase64 = !!matches[4];\n        dataString = dataURI.slice(matches[0].length);\n        if (isBase64) {\n          // Convert base64 to raw binary data held in a string:\n          byteString = atob(dataString);\n        } else {\n          // Convert base64/URLEncoded data component to raw binary:\n          byteString = decodeURIComponent(dataString);\n        }\n        // Write the bytes of the string to an ArrayBuffer:\n        arrayBuffer = new ArrayBuffer(byteString.length);\n        intArray = new Uint8Array(arrayBuffer);\n        for (i = 0; i < byteString.length; i += 1) {\n          intArray[i] = byteString.charCodeAt(i);\n        }\n        // Write the ArrayBuffer (or ArrayBufferView) to a blob:\n        if (hasBlobConstructor) {\n          return new Blob([hasArrayBufferViewSupport ? intArray : arrayBuffer], {\n            type: mediaType\n          });\n        }\n        bb = new BlobBuilder();\n        bb.append(arrayBuffer);\n        return bb.getBlob(mediaType);\n      };\n      if (window.HTMLCanvasElement && !CanvasPrototype.toBlob) {\n        if (CanvasPrototype.mozGetAsFile) {\n          CanvasPrototype.toBlob = function (callback, type, quality) {\n            var self = this;\n            setTimeout(function () {\n              if (quality && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              } else {\n                callback(self.mozGetAsFile('blob', type));\n              }\n            });\n          };\n        } else if (CanvasPrototype.toDataURL && dataURLtoBlob) {\n          if (CanvasPrototype.msToBlob) {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                if ((type && type !== 'image/png' || quality) && CanvasPrototype.toDataURL && dataURLtoBlob) {\n                  callback(dataURLtoBlob(self.toDataURL(type, quality)));\n                } else {\n                  callback(self.msToBlob(type));\n                }\n              });\n            };\n          } else {\n            CanvasPrototype.toBlob = function (callback, type, quality) {\n              var self = this;\n              setTimeout(function () {\n                callback(dataURLtoBlob(self.toDataURL(type, quality)));\n              });\n            };\n          }\n        }\n      }\n      if (module.exports) {\n        module.exports = dataURLtoBlob;\n      } else {\n        window.dataURLtoBlob = dataURLtoBlob;\n      }\n    })(window);\n  })(canvasToBlob);\n  var toBlob = canvasToBlob.exports;\n\n  var isBlob = function isBlob(value) {\n    if (typeof Blob === 'undefined') {\n      return false;\n    }\n    return value instanceof Blob || Object.prototype.toString.call(value) === '[object Blob]';\n  };\n\n  var DEFAULTS = {\n    /**\n     * Indicates if output the original image instead of the compressed one\n     * when the size of the compressed image is greater than the original one's\n     * @type {boolean}\n     */\n    strict: true,\n    /**\n     * Indicates if read the image's Exif Orientation information,\n     * and then rotate or flip the image automatically.\n     * @type {boolean}\n     */\n    checkOrientation: true,\n    /**\n     * Indicates if retain the image's Exif information after compressed.\n     * @type {boolean}\n    */\n    retainExif: false,\n    /**\n     * The max width of the output image.\n     * @type {number}\n     */\n    maxWidth: Infinity,\n    /**\n     * The max height of the output image.\n     * @type {number}\n     */\n    maxHeight: Infinity,\n    /**\n     * The min width of the output image.\n     * @type {number}\n     */\n    minWidth: 0,\n    /**\n     * The min height of the output image.\n     * @type {number}\n     */\n    minHeight: 0,\n    /**\n     * The width of the output image.\n     * If not specified, the natural width of the source image will be used.\n     * @type {number}\n     */\n    width: undefined,\n    /**\n     * The height of the output image.\n     * If not specified, the natural height of the source image will be used.\n     * @type {number}\n     */\n    height: undefined,\n    /**\n     * Sets how the size of the image should be resized to the container\n     * specified by the `width` and `height` options.\n     * @type {string}\n     */\n    resize: 'none',\n    /**\n     * The quality of the output image.\n     * It must be a number between `0` and `1`,\n     * and only available for `image/jpeg` and `image/webp` images.\n     * Check out {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/toBlob canvas.toBlob}.\n     * @type {number}\n     */\n    quality: 0.8,\n    /**\n     * The mime type of the output image.\n     * By default, the original mime type of the source image file will be used.\n     * @type {string}\n     */\n    mimeType: 'auto',\n    /**\n     * Files whose file type is included in this list,\n     * and whose file size exceeds the `convertSize` value will be converted to JPEGs.\n     * @type {string｜Array}\n     */\n    convertTypes: ['image/png'],\n    /**\n     * PNG files over this size (5 MB by default) will be converted to JPEGs.\n     * To disable this, just set the value to `Infinity`.\n     * @type {number}\n     */\n    convertSize: 5000000,\n    /**\n     * The hook function to execute before draw the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.fillStyle = '#fff';\n     * }\n     */\n    beforeDraw: null,\n    /**\n     * The hook function to execute after drew the image into the canvas for compression.\n     * @type {Function}\n     * @param {CanvasRenderingContext2D} context - The 2d rendering context of the canvas.\n     * @param {HTMLCanvasElement} canvas - The canvas for compression.\n     * @example\n     * function (context, canvas) {\n     *   context.filter = 'grayscale(100%)';\n     * }\n     */\n    drew: null,\n    /**\n     * The hook function to execute when success to compress the image.\n     * @type {Function}\n     * @param {File} file - The compressed image File object.\n     * @example\n     * function (file) {\n     *   console.log(file);\n     * }\n     */\n    success: null,\n    /**\n     * The hook function to execute when fail to compress the image.\n     * @type {Function}\n     * @param {Error} err - An Error object.\n     * @example\n     * function (err) {\n     *   console.log(err.message);\n     * }\n     */\n    error: null\n  };\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n  var REGEXP_IMAGE_TYPE = /^image\\/.+$/;\n\n  /**\n   * Check if the given value is a mime type of image.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given is a mime type of image, else `false`.\n   */\n  function isImageType(value) {\n    return REGEXP_IMAGE_TYPE.test(value);\n  }\n\n  /**\n   * Convert image type to extension.\n   * @param {string} value - The image type to convert.\n   * @returns {boolean} Returns the image extension.\n   */\n  function imageTypeToExtension(value) {\n    var extension = isImageType(value) ? value.substr(6) : '';\n    if (extension === 'jpeg') {\n      extension = 'jpg';\n    }\n    return \".\".concat(extension);\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    var i;\n    length += start;\n    for (i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var btoa = WINDOW.btoa;\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (e) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref) {\n    var aspectRatio = _ref.aspectRatio,\n      height = _ref.height,\n      width = _ref.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if ((type === 'contain' || type === 'none') && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get Exif information from the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {Array} The read Exif information.\n   */\n  function getExif(arrayBuffer) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    var length = array.length;\n    var segments = [];\n    var start = 0;\n    while (start + 3 < length) {\n      var value = array[start];\n      var next = array[start + 1];\n\n      // SOS (Start of Scan)\n      if (value === 0xFF && next === 0xDA) {\n        break;\n      }\n\n      // SOI (Start of Image)\n      if (value === 0xFF && next === 0xD8) {\n        start += 2;\n      } else {\n        var offset = array[start + 2] * 256 + array[start + 3];\n        var end = start + offset + 2;\n        var segment = array.slice(start, end);\n        segments.push(segment);\n        start = end;\n      }\n    }\n    return segments.reduce(function (exifArray, current) {\n      if (current[0] === 0xFF && current[1] === 0xE1) {\n        return exifArray.concat(current);\n      }\n      return exifArray;\n    }, []);\n  }\n\n  /**\n   * Insert Exif information into the given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {Array} exifArray - The Exif information to insert.\n   * @returns {ArrayBuffer} The transformed array buffer.\n   */\n  function insertExif(arrayBuffer, exifArray) {\n    var array = toArray(new Uint8Array(arrayBuffer));\n    if (array[2] !== 0xFF || array[3] !== 0xE0) {\n      return arrayBuffer;\n    }\n    var app0Length = array[4] * 256 + array[5];\n    var newArrayBuffer = [0xFF, 0xD8].concat(exifArray, array.slice(4 + app0Length));\n    return new Uint8Array(newArrayBuffer);\n  }\n\n  var ArrayBuffer$1 = WINDOW.ArrayBuffer,\n    FileReader = WINDOW.FileReader;\n  var URL = WINDOW.URL || WINDOW.webkitURL;\n  var REGEXP_EXTENSION = /\\.\\w+$/;\n  var AnotherCompressor = WINDOW.Compressor;\n\n  /**\n   * Creates a new image compressor.\n   * @class\n   */\n  var Compressor = /*#__PURE__*/function () {\n    /**\n     * The constructor of Compressor.\n     * @param {File|Blob} file - The target image file for compressing.\n     * @param {Object} [options] - The options for compressing.\n     */\n    function Compressor(file, options) {\n      _classCallCheck(this, Compressor);\n      this.file = file;\n      this.exif = [];\n      this.image = new Image();\n      this.options = _objectSpread2(_objectSpread2({}, DEFAULTS), options);\n      this.aborted = false;\n      this.result = null;\n      this.init();\n    }\n    _createClass(Compressor, [{\n      key: \"init\",\n      value: function init() {\n        var _this = this;\n        var file = this.file,\n          options = this.options;\n        if (!isBlob(file)) {\n          this.fail(new Error('The first argument must be a File or Blob object.'));\n          return;\n        }\n        var mimeType = file.type;\n        if (!isImageType(mimeType)) {\n          this.fail(new Error('The first argument must be an image File or Blob object.'));\n          return;\n        }\n        if (!URL || !FileReader) {\n          this.fail(new Error('The current browser does not support image compression.'));\n          return;\n        }\n        if (!ArrayBuffer$1) {\n          options.checkOrientation = false;\n          options.retainExif = false;\n        }\n        var isJPEGImage = mimeType === 'image/jpeg';\n        var checkOrientation = isJPEGImage && options.checkOrientation;\n        var retainExif = isJPEGImage && options.retainExif;\n        if (URL && !checkOrientation && !retainExif) {\n          this.load({\n            url: URL.createObjectURL(file)\n          });\n        } else {\n          var reader = new FileReader();\n          this.reader = reader;\n          reader.onload = function (_ref) {\n            var target = _ref.target;\n            var result = target.result;\n            var data = {};\n            var orientation = 1;\n            if (checkOrientation) {\n              // Reset the orientation value to its default value 1\n              // as some iOS browsers will render image with its orientation\n              orientation = resetAndGetOrientation(result);\n              if (orientation > 1) {\n                _extends(data, parseOrientation(orientation));\n              }\n            }\n            if (retainExif) {\n              _this.exif = getExif(result);\n            }\n            if (checkOrientation || retainExif) {\n              if (!URL\n\n              // Generate a new URL with the default orientation value 1.\n              || orientation > 1) {\n                data.url = arrayBufferToDataURL(result, mimeType);\n              } else {\n                data.url = URL.createObjectURL(file);\n              }\n            } else {\n              data.url = result;\n            }\n            _this.load(data);\n          };\n          reader.onabort = function () {\n            _this.fail(new Error('Aborted to read the image with FileReader.'));\n          };\n          reader.onerror = function () {\n            _this.fail(new Error('Failed to read the image with FileReader.'));\n          };\n          reader.onloadend = function () {\n            _this.reader = null;\n          };\n          if (checkOrientation || retainExif) {\n            reader.readAsArrayBuffer(file);\n          } else {\n            reader.readAsDataURL(file);\n          }\n        }\n      }\n    }, {\n      key: \"load\",\n      value: function load(data) {\n        var _this2 = this;\n        var file = this.file,\n          image = this.image;\n        image.onload = function () {\n          _this2.draw(_objectSpread2(_objectSpread2({}, data), {}, {\n            naturalWidth: image.naturalWidth,\n            naturalHeight: image.naturalHeight\n          }));\n        };\n        image.onabort = function () {\n          _this2.fail(new Error('Aborted to load the image.'));\n        };\n        image.onerror = function () {\n          _this2.fail(new Error('Failed to load the image.'));\n        };\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        if (WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent)) {\n          // Fix the `The operation is insecure` error (#57)\n          image.crossOrigin = 'anonymous';\n        }\n        image.alt = file.name;\n        image.src = data.url;\n      }\n    }, {\n      key: \"draw\",\n      value: function draw(_ref2) {\n        var _this3 = this;\n        var naturalWidth = _ref2.naturalWidth,\n          naturalHeight = _ref2.naturalHeight,\n          _ref2$rotate = _ref2.rotate,\n          rotate = _ref2$rotate === void 0 ? 0 : _ref2$rotate,\n          _ref2$scaleX = _ref2.scaleX,\n          scaleX = _ref2$scaleX === void 0 ? 1 : _ref2$scaleX,\n          _ref2$scaleY = _ref2.scaleY,\n          scaleY = _ref2$scaleY === void 0 ? 1 : _ref2$scaleY;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        var canvas = document.createElement('canvas');\n        var context = canvas.getContext('2d');\n        var is90DegreesRotated = Math.abs(rotate) % 180 === 90;\n        var resizable = (options.resize === 'contain' || options.resize === 'cover') && isPositiveNumber(options.width) && isPositiveNumber(options.height);\n        var maxWidth = Math.max(options.maxWidth, 0) || Infinity;\n        var maxHeight = Math.max(options.maxHeight, 0) || Infinity;\n        var minWidth = Math.max(options.minWidth, 0) || 0;\n        var minHeight = Math.max(options.minHeight, 0) || 0;\n        var aspectRatio = naturalWidth / naturalHeight;\n        var width = options.width,\n          height = options.height;\n        if (is90DegreesRotated) {\n          var _ref3 = [maxHeight, maxWidth];\n          maxWidth = _ref3[0];\n          maxHeight = _ref3[1];\n          var _ref4 = [minHeight, minWidth];\n          minWidth = _ref4[0];\n          minHeight = _ref4[1];\n          var _ref5 = [height, width];\n          width = _ref5[0];\n          height = _ref5[1];\n        }\n        if (resizable) {\n          aspectRatio = width / height;\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: maxWidth,\n          height: maxHeight\n        }, 'contain');\n        maxWidth = _getAdjustedSizes.width;\n        maxHeight = _getAdjustedSizes.height;\n        var _getAdjustedSizes2 = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minWidth,\n          height: minHeight\n        }, 'cover');\n        minWidth = _getAdjustedSizes2.width;\n        minHeight = _getAdjustedSizes2.height;\n        if (resizable) {\n          var _getAdjustedSizes3 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          }, options.resize);\n          width = _getAdjustedSizes3.width;\n          height = _getAdjustedSizes3.height;\n        } else {\n          var _getAdjustedSizes4 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: width,\n            height: height\n          });\n          var _getAdjustedSizes4$wi = _getAdjustedSizes4.width;\n          width = _getAdjustedSizes4$wi === void 0 ? naturalWidth : _getAdjustedSizes4$wi;\n          var _getAdjustedSizes4$he = _getAdjustedSizes4.height;\n          height = _getAdjustedSizes4$he === void 0 ? naturalHeight : _getAdjustedSizes4$he;\n        }\n        width = Math.floor(normalizeDecimalNumber(Math.min(Math.max(width, minWidth), maxWidth)));\n        height = Math.floor(normalizeDecimalNumber(Math.min(Math.max(height, minHeight), maxHeight)));\n        var destX = -width / 2;\n        var destY = -height / 2;\n        var destWidth = width;\n        var destHeight = height;\n        var params = [];\n        if (resizable) {\n          var srcX = 0;\n          var srcY = 0;\n          var srcWidth = naturalWidth;\n          var srcHeight = naturalHeight;\n          var _getAdjustedSizes5 = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: naturalWidth,\n            height: naturalHeight\n          }, {\n            contain: 'cover',\n            cover: 'contain'\n          }[options.resize]);\n          srcWidth = _getAdjustedSizes5.width;\n          srcHeight = _getAdjustedSizes5.height;\n          srcX = (naturalWidth - srcWidth) / 2;\n          srcY = (naturalHeight - srcHeight) / 2;\n          params.push(srcX, srcY, srcWidth, srcHeight);\n        }\n        params.push(destX, destY, destWidth, destHeight);\n        if (is90DegreesRotated) {\n          var _ref6 = [height, width];\n          width = _ref6[0];\n          height = _ref6[1];\n        }\n        canvas.width = width;\n        canvas.height = height;\n        if (!isImageType(options.mimeType)) {\n          options.mimeType = file.type;\n        }\n        var fillStyle = 'transparent';\n\n        // Converts PNG files over the `convertSize` to JPEGs.\n        if (file.size > options.convertSize && options.convertTypes.indexOf(options.mimeType) >= 0) {\n          options.mimeType = 'image/jpeg';\n        }\n        var isJPEGImage = options.mimeType === 'image/jpeg';\n        if (isJPEGImage) {\n          fillStyle = '#fff';\n        }\n\n        // Override the default fill color (#000, black)\n        context.fillStyle = fillStyle;\n        context.fillRect(0, 0, width, height);\n        if (options.beforeDraw) {\n          options.beforeDraw.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.drawImage.apply(context, [image].concat(params));\n        context.restore();\n        if (options.drew) {\n          options.drew.call(this, context, canvas);\n        }\n        if (this.aborted) {\n          return;\n        }\n        var callback = function callback(blob) {\n          if (!_this3.aborted) {\n            var done = function done(result) {\n              return _this3.done({\n                naturalWidth: naturalWidth,\n                naturalHeight: naturalHeight,\n                result: result\n              });\n            };\n            if (blob && isJPEGImage && options.retainExif && _this3.exif && _this3.exif.length > 0) {\n              var next = function next(arrayBuffer) {\n                return done(toBlob(arrayBufferToDataURL(insertExif(arrayBuffer, _this3.exif), options.mimeType)));\n              };\n              if (blob.arrayBuffer) {\n                blob.arrayBuffer().then(next).catch(function () {\n                  _this3.fail(new Error('Failed to read the compressed image with Blob.arrayBuffer().'));\n                });\n              } else {\n                var reader = new FileReader();\n                _this3.reader = reader;\n                reader.onload = function (_ref7) {\n                  var target = _ref7.target;\n                  next(target.result);\n                };\n                reader.onabort = function () {\n                  _this3.fail(new Error('Aborted to read the compressed image with FileReader.'));\n                };\n                reader.onerror = function () {\n                  _this3.fail(new Error('Failed to read the compressed image with FileReader.'));\n                };\n                reader.onloadend = function () {\n                  _this3.reader = null;\n                };\n                reader.readAsArrayBuffer(blob);\n              }\n            } else {\n              done(blob);\n            }\n          }\n        };\n        if (canvas.toBlob) {\n          canvas.toBlob(callback, options.mimeType, options.quality);\n        } else {\n          callback(toBlob(canvas.toDataURL(options.mimeType, options.quality)));\n        }\n      }\n    }, {\n      key: \"done\",\n      value: function done(_ref8) {\n        var naturalWidth = _ref8.naturalWidth,\n          naturalHeight = _ref8.naturalHeight,\n          result = _ref8.result;\n        var file = this.file,\n          image = this.image,\n          options = this.options;\n        if (URL && image.src.indexOf('blob:') === 0) {\n          URL.revokeObjectURL(image.src);\n        }\n        if (result) {\n          // Returns original file if the result is greater than it and without size related options\n          if (options.strict && !options.retainExif && result.size > file.size && options.mimeType === file.type && !(options.width > naturalWidth || options.height > naturalHeight || options.minWidth > naturalWidth || options.minHeight > naturalHeight || options.maxWidth < naturalWidth || options.maxHeight < naturalHeight)) {\n            result = file;\n          } else {\n            var date = new Date();\n            result.lastModified = date.getTime();\n            result.lastModifiedDate = date;\n            result.name = file.name;\n\n            // Convert the extension to match its type\n            if (result.name && result.type !== file.type) {\n              result.name = result.name.replace(REGEXP_EXTENSION, imageTypeToExtension(result.type));\n            }\n          }\n        } else {\n          // Returns original file if the result is null in some cases.\n          result = file;\n        }\n        this.result = result;\n        if (options.success) {\n          options.success.call(this, result);\n        }\n      }\n    }, {\n      key: \"fail\",\n      value: function fail(err) {\n        var options = this.options;\n        if (options.error) {\n          options.error.call(this, err);\n        } else {\n          throw err;\n        }\n      }\n    }, {\n      key: \"abort\",\n      value: function abort() {\n        if (!this.aborted) {\n          this.aborted = true;\n          if (this.reader) {\n            this.reader.abort();\n          } else if (!this.image.complete) {\n            this.image.onload = null;\n            this.image.onabort();\n          } else {\n            this.fail(new Error('The compression process has been aborted.'));\n          }\n        }\n      }\n\n      /**\n       * Get the no conflict compressor class.\n       * @returns {Compressor} The compressor class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Compressor = AnotherCompressor;\n        return Compressor;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        _extends(DEFAULTS, options);\n      }\n    }]);\n    return Compressor;\n  }();\n\n  return Compressor;\n\n}));\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}